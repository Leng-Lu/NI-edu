#!/usr/bin/env bash
set -e
if [ -f Dockerfile ]; then
    rm Dockerfile
fi

neurodocker generate docker \
    --base=neurodebian:stretch-non-free \
    --pkg-manager=apt \
    --install vim git firefox-esr openssh-server \
    --run "apt-key adv --recv-keys --keyserver keys.gnupg.net E1F958385BFE2B6E" \
    --run "echo \"deb http://packages.x2go.org/debian stretch extras main\" >> /etc/apt/sources.list.d/x2go.list" \
    --run "apt-get update -qq && apt-get install x2go-keyring && apt-get update && apt-get install -y x2gomatebindings x2goserver x2goserver-xsession" \
    --run "sed -i \"s/#PasswordAuthentication/PasswordAuthentication/g\" /etc/ssh/sshd_config" \
    --run "sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config" \
    --run "mkdir /var/run/sshd" \
    --run "echo 'root:ubuntu' | chpasswd" \
    --add-to-entrypoint "/usr/sbin/sshd -D &" \
    --miniconda \
        conda_install="python=3.7 jupyter nbgrader jupyter_contrib_nbextensions
                       matplotlib scikit-learn seaborn" \
        pip_install="nilearn nibabel" \
        create_env="neuro_py37" \
        activate=true \
    --run "curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > /usr/bin/tini && chmod +x /usr/bin/tini" \
    --add-to-entrypoint "/usr/bin/tini -s -- jupyter notebook --ip=0.0.0.0 --port 9999 --allow-root &" \
    --run "test "$(getent passwd neuro)" || useradd --no-user-group --create-home --shell /bin/bash -p "$(openssl passwd -1 ubuntu)\" neuro" \
    --workdir='/home/neuro' \
    --copy . /home/neuro/ \
    --run 'mv course_settings_container.yml course_settings.yml' \
    --run 'mkdir -p /home/neuro/.jupyter && echo c.NotebookApp.ip = \"0.0.0.0\" > /home/neuro/.jupyter/jupyter_notebook_config.py' \
    --run-bash "source activate neuro_py37 && pip install . && jupyter nbextension install --sys-prefix --py nbgrader --overwrite && jupyter nbextension enable --sys-prefix --py nbgrader && jupyter serverextension enable --sys-prefix --py nbgrader" \
    --expose 9999 \
    --expose 22 \
    --output Dockerfile
sed -i "s/EXPOSE {'2': '2'}/EXPOSE 22/g" Dockerfile
